generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String
}

model locations {
  id      Int     @id @default(autoincrement())
  name    String
  address String?

  inventory     inventory[]
  packing_slips packing_slips[]

  // NEW RELATION
  reclassification reclassificationLog[]
  inventory_adjustments inventoryAdjustment[]
}

model materials {
  id       Int    @id @default(autoincrement())
  name     String
  category String
  unit     String @default("lb")

  inventory          inventory[]
  packing_slip_items packing_slip_items[]

  // NEW RELATIONS
  reclassify_from reclassificationLog[] @relation("FromMaterial")
  reclassify_to   reclassificationLog[] @relation("ToMaterial")
  inventory_adjustments    inventoryAdjustment[]
}

model inventory {
  id           Int      @id @default(autoincrement())
  material_id  Int
  quantity     Float
  location_id  Int
  last_updated DateTime @updatedAt

  locations locations @relation(fields: [location_id], references: [id])
  materials materials @relation(fields: [material_id], references: [id])

  @@unique([material_id, location_id], name: "uniq_material_location")
}

model packing_slips {
  id             Int      @id @default(autoincrement())
  slip_type      String
  status         String   @default("draft")
  from_name      String?
  to_name        String?
  date_time      DateTime @default(now())
  truck_number   String?
  trailer_number String?
  po_number      String?
  seal_number    String?
  location_id    Int

  location           locations            @relation(fields: [location_id], references: [id])
  packing_slip_items packing_slip_items[]
}


model packing_slip_items {
  id              Int     @id @default(autoincrement())
  packing_slip_id Int
  material_id     Int
  gross_weight    Float
  tare_weight     Float
  // net_weight      Float?
  remarks         String?
  ticket_number   String?

  packing_slips packing_slips @relation(fields: [packing_slip_id], references: [id])
  material      materials     @relation(fields: [material_id], references: [id])
}

model reclassificationLog {
  id               Int      @id @default(autoincrement())
  from_material_id Int
  to_material_id   Int
  quantity         Float
  location_id      Int
  timestamp        DateTime @default(now())
  from_material materials @relation("FromMaterial", fields: [from_material_id], references: [id])
  to_material   materials @relation("ToMaterial", fields: [to_material_id], references: [id])
  location      locations @relation(fields: [location_id], references: [id])

  @@map("reclassificationlog")
}

model inventoryAdjustment {
  id           Int      @id @default(autoincrement())
  material_id  Int
  location_id  Int
  change       Float
  reason       String?
  timestamp    DateTime @default(now())

  material     materials @relation(fields: [material_id], references: [id])
  location     locations @relation(fields: [location_id], references: [id])
}
