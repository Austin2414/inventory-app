generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model locations {
  id      Int     @id @default(autoincrement())
  name    String
  address String?
  
  // Added these relations to fix the errors
  inventory inventory[]
  packing_slips packing_slips[]
}

model materials {
  id       Int     @id @default(autoincrement())
  name     String
  category String
  unit     String  @default("lb")
  
  // Added these relations to fix the errors
  inventory inventory[]
  packing_slip_items packing_slip_items[]
}

model inventory {
  id           Int     @id @default(autoincrement())
  material_id  Int
  quantity     Float
  location_id  Int
  last_updated DateTime @default(now())
  
  locations    locations @relation(fields: [location_id], references: [id])
  materials    materials @relation(fields: [material_id], references: [id])
  @@unique([material_id, location_id], name: "uniq_material_location")

}

model packing_slips {
  id             Int     @id @default(autoincrement())
  slip_type      String
  status         String  @default("draft")
  from_name      String?
  to_name        String?
  date_time      DateTime @default(now())
  truck_number   String?
  trailer_number String?
  po_number      String?
  seal_number    String?
  location_id    Int
  
  locations      locations @relation(fields: [location_id], references: [id])
  packing_slip_items packing_slip_items[]
}

model packing_slip_items {
  id              Int     @id @default(autoincrement())
  packing_slip_id Int
  material_id     Int
  gross_weight    Float
  tare_weight     Float
  remarks         String?
  ticket_number   String?
  
  packing_slips   packing_slips @relation(fields: [packing_slip_id], references: [id])
  materials       materials @relation(fields: [material_id], references: [id])
}